# Import the pygame module
import pygame

# Import pygame.locals for easier access to key coordinates
# Updated to conform to flake8 and black standards
import random
from pygame.locals import (
    K_UP,
    K_DOWN,
    K_LEFT,
    K_RIGHT,
    K_ESCAPE,
    KEYDOWN,
    QUIT,
)

# Define constants for the screen width and height
SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600

# Define a player object by extending pygame.sprite.Sprite
# The surface drawn on the screen is now an attribute of 'player'
class Player(pygame.sprite.Sprite):
    def __init__(self):
        super(Player, self).__init__()
        self.surf = pygame.Surface((50, 250))
        self.surf.fill((255, 255, 255))
        self.rect = self.surf.get_rect(
            center =(
                SCREEN_HEIGHT,
                0)
            )
    def update(self, pressed_keys):
        if pressed_keys[K_UP]:
            self.rect.move_ip(0, -1)
        if pressed_keys[K_DOWN]:                
            self.rect.move_ip(0, 1)
        if self.rect.left < 0:
            self.rect.left = 0
        if self.rect.right > SCREEN_WIDTH:
            self.rect.right = SCREEN_WIDTH
        if self.rect.top <= 0:
            self.rect.top = 0
        if self.rect.bottom >= 250:
            self.rect.bottom = 250

class Player2(pygame.sprite.Sprite):
    def __init__(self):
        super(Player2, self).__init__()
        self.surftop = pygame.Surface((50, 250))
        self.surftop.fill((255, 255, 255))
        self.rect = self.surftop.get_rect(
            center =(
                SCREEN_WIDTH,
                SCREEN_HEIGHT)
            )
    def update(self, pressed_keys):
        if pressed_keys[K_UP]:
            self.rect.move_ip(0, -1)
        if pressed_keys[K_DOWN]:                
            self.rect.move_ip(0, 1)        

#   if pressed_keys[K_LEFT]:
      #      self.rect.move_ip(-1, 0)
      #  if pressed_keys[K_RIGHT]:
       #     self.rect.move_ip(1, 0)
#limits to screen dimensions/keeps from crossing screen boundaries
        if self.rect.left < 0:
            self.rect.left = 0
        if self.rect.right > SCREEN_WIDTH:
            self.rect.right = SCREEN_WIDTH
        if self.rect.top <= 0:
            self.rect.top = 0
        if self.rect.bottom >= SCREEN_HEIGHT:
            self.rect.bottom = SCREEN_HEIGHT
 #   def autoleft(self, moveleft):
  #      self.rect.move_ip(0, -1)
        

# Initialize pygame
pygame.init()

# Create the screen object
# The size is determined by the constant SCREEN_WIDTH and SCREEN_HEIGHT
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))


# Instantiate player. Right now, this is just a rectangle.
player = Player()
player2 = Player2()

# Variable to keep the main loop running
running = True

# Main loop
while running:
    # for loop through the event queue
    
    for event in pygame.event.get():
        
        # Check for KEYDOWN event
        if event.type == KEYDOWN:
            # If the Esc key is pressed, then exit the main loop
            if event.key == K_ESCAPE:
                running = False
        # Check for QUIT event. If QUIT, then set running to false.
        elif event.type == QUIT:
            running = False

    

    # Get all the keys currently pressed
    pressed_keys = pygame.key.get_pressed()

    # Update the player sprite based on user keypresses
    player.update(pressed_keys)
    player2.update(pressed_keys)
    # Fill the screen with black
    screen.fill((0, 0, 0))
    screen.blit(player2.surftop, player2.rect)
    screen.blit(player.surf, player.rect)
    pygame.display.flip()
    
    
    
    
    
    ADDENEMY = pygame.USEREVENT + 1
    pygame.time.set_timer(ADDENEMY, 250)
pygame.quit()
